# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Maven@3
    displayName: Maven package
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  - task: Maven@3
    displayName: Maven JaCoCo
    inputs:
      mavenPomFile: 'pom.xml'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testRunTitle: 'my first test'
      codeCoverageToolOption: 'JaCoCo'
      codeCoverageSourceDirectories: '$(System.DefaultWorkingDirectory)/src/main/java/'
      codeCoverageFailIfEmpty: true
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
      isJacocoCoverageReportXML: true
      sqMavenPluginVersionChoice: 'latest'
      goals: 'clean clover:setup test clover:aggregate clover:clover'
  
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '$(System.SourcesDirectory)/CoverageResults/Coberture.xml'
      failIfCoverageEmpty: false
  - task: Maven@3
    displayName: Build Docker image
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'spring-boot:build-image'
      publishJUnitResults: false
      jdkVersionOption: '1.11'
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker Hub'
      command: 'login'
  - task: Docker@2
    displayName: Docker push
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(ImageName)'
      command: 'push'
      tags: 'latest'
